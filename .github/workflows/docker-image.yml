name: Docker Image LITASURYA

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          no-cache: true
          tags: |
            ghcr.io/${{ github.repository }}:latest

      - name: Verify PHP Extensions
        run: |
          docker run --rm ghcr.io/${{ github.repository }}:latest php -m

      - name: SSH to server and deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            echo "Logging in to GitHub Container Registry..."
            docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password ${{ secrets.GHCR_PAT }}

            echo "Cleaning up old images..."
            docker image prune -f

            cd litasurya-deployment

            docker compose down
            echo "Pulling latest image..."
            docker compose pull
            docker compose up -d --force-recreate

            echo "Checking containers status..."
            docker compose ps

            echo "Getting container IDs..."
            APP_CONTAINER_ID=$(docker compose ps -q app)
            MYSQL_CONTAINER_ID=$(docker compose ps -q mysql)

            if [ -z "$APP_CONTAINER_ID" ]; then
              echo "Error: app container not found!"
              exit 1
            fi
            if [ -z "$MYSQL_CONTAINER_ID" ]; then
              echo "Error: mysql container not found!"
              exit 1
            fi

            echo "Waiting for app container to be running..."
            while [ "$(docker inspect -f '{{.State.Running}}' $APP_CONTAINER_ID)" != "true" ]; do
              echo "Waiting for app container..."
              sleep 3
            done

            echo "Waiting for MySQL container to be running..."
            while [ "$(docker inspect -f '{{.State.Running}}' $MYSQL_CONTAINER_ID)" != "true" ]; do
              echo "Waiting for MySQL container..."
              sleep 3
            done

            echo "Waiting for MySQL to be ready..."
            MAX_TRIES=20
            COUNT=0
            until docker compose exec -T mysql mysqladmin ping -h localhost --silent; do
              echo "Waiting for MySQL to accept connections... ($COUNT/$MAX_TRIES)"
              sleep 3
              COUNT=$((COUNT+1))
              if [ $COUNT -ge $MAX_TRIES ]; then
                echo "MySQL did not become ready in time, exiting."
                exit 1
              fi
            done

            echo "litasurya-app is running, checking logs..."
            docker compose logs --tail=20 app

            echo "Running database migrations..."
            docker compose exec -T app php artisan migrate --force
            if [ $? -ne 0 ]; then
              echo "Migration failed!"
              exit 1
            fi

            echo "Deployment complete!"
