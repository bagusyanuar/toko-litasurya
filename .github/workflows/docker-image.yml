name: Docker Image LITASURYA

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          no-cache: true
          tags: |
            ghcr.io/${{ github.repository }}:latest

      - name: Verify PHP Extensions
        run: |
          docker run --rm ghcr.io/${{ github.repository }}:latest php -m

      - name: SSH to server and deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            echo "Logging in to GitHub Container Registry..."
            docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password ${{ secrets.GHCR_PAT }}

            echo "Cleaning up old images..."
            docker image prune -f

            cd litasurya-deployment

            echo "Stopping and removing old containers if any..."
            docker compose -p litasurya down

            echo "Pulling latest image..."
            docker compose -p litasurya pull
            docker compose -p litasurya up -d --force-recreate

            echo "Checking containers status..."
            docker compose -p litasurya ps

            CONTAINER_ID=$(docker compose -p litasurya ps -q litasurya-app)
            if [ -z "$CONTAINER_ID" ]; then
              echo "Error: litasurya-app container not found!"
              exit 1
            fi

            echo "Waiting for litasurya-app container to be running..."
            while [ "$(docker inspect -f '{{.State.Running}}' $CONTAINER_ID)" != "true" ]; do
              echo "Waiting..."
              sleep 5
            done

            echo "litasurya-app is running, checking logs..."
            docker compose logs --tail=20 litasurya-app

            echo "Running database migrations..."
            docker compose -p litasurya exec -T litasurya-app php artisan migrate --force
            if [ $? -ne 0 ]; then
              echo "Migration failed!"
              exit 1
            fi

            echo "Deployment complete!"
